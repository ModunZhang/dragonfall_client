apply plugin: 'com.android.application'

//we read version info from "version.properties"
def Properties projectVersion() {
    def versionFile = new File(project.rootDir, 'version.properties')
    def version = new Properties()
    def stream
    try {
        stream = new FileInputStream(versionFile)
        version.load(stream)
    } catch (FileNotFoundException ignore) {
    } finally {
        if (stream != null) stream.close()
    }
    // safety defaults in case file is missing
    if(!version['versionCode']) version['versionCode'] = 1
    if(!version['versionName']) version['versionName'] = "1.0"
    return version
}
//end for read version info

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    lintOptions {
        warningsAsErrors false
        disable 'CommitPrefEdits'
    }
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 15
    }

    productFlavors {
        googleplay {
            applicationId "com.xapcn.dragonfall"
            versionCode projectVersion()['versionCode'] as int
            versionName projectVersion()['versionName']
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifestMain.xml"
        assets.srcDir "assets"
        aidl.srcDir "src/com/android/vending/billing" //google play v3 billing
    }

    sourceSets.googleplay {
        manifest.srcFile "AndroidManifest.xml"
    }

    signingConfigs {
        release {
            storeFile file("keystore/xapcn_dragonfall_gp.keystore")
            storePassword "twhsMbcZxJ4isvgWX4BJ"
            keyAlias "xapcn_dragonfall"
            keyPassword "twhsMbcZxJ4isvgWX4BJ"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile project(':libcocos2dx')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //TODO: set the jar to each flavors

    //facebook
    compile 'com.facebook.android:facebook-android-sdk:4.0.0'

    //google play services
    googleplayCompile 'com.google.android.gms:play-services-plus:8.1.0'
    googleplayCompile 'com.google.android.gms:play-services-ads:8.1.0'
    googleplayCompile 'com.google.android.gms:play-services-gcm:8.1.0'
    googleplayCompile 'com.google.android.gms:play-services-vision:8.1.0'
}

//We want to use custom ant antenna task for different flavors with hook the android tasks.
ant.importBuild '../GooglePlayPreprocess.xml'
ant.importBuild '../PayPalPreprocess.xml'

android.applicationVariants.all { variant ->
    variant.productFlavors.each { flavor ->
        if (flavor.name.equals('googleplay')) {
            variant.javaCompile.dependsOn(GooglePlayPreprocess)
        }
    }
    variant.outputs.each { output ->
        output.outputFile = new File(
                output.outputFile.parent,
                output.outputFile.name.replace(".apk", "-${variant.versionName}-${variant.versionCode}.apk"))
    }
}
//end for preprocess
